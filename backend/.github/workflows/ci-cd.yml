name: CI/CD Pipeline

on:
  push:
    branches:
      - main  
  pull_request:
    branches:
      - main  

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'  

      - name: Build
        run: go build -o lifesync cmd/app/main.go 

      - name: Run tests
        run: go test -v .\tests

      - name: Lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.54  

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'  
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: your-dockerhub-username/myapp:latest

      - name: Deploy to Kubernetes
        run: |
          echo "Deploying to Kubernetes..."
          echo "${{ secrets.KUBE_CONFIG }}" | base64 --decode > kubeconfig.yaml
          export KUBECONFIG=kubeconfig.yaml

          kubectl apply -f build/k8s/deployment.yaml
          kubectl apply -f build/k8s/configmap.yaml
          kubectl apply -f build/k8s/service.yaml

          kubectl get pods -o wide
          kubectl get svc